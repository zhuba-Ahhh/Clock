{"version":3,"file":"index-e7nOANoZ.js","sources":["../../src/components/Clock.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nconst Clock: React.FC = () => {\n  const [time, setTime] = useState(new Date());\n  const minuteRef = useRef<HTMLDivElement>(null);\n  const hourRef = useRef<HTMLDivElement>(null);\n  const secondRef = useRef<HTMLDivElement>(null);\n  const timeRef = useRef<HTMLDivElement>(null);\n\n  const updateClockHands = useCallback(() => {\n    if (!minuteRef.current || !hourRef.current || !secondRef.current || !timeRef.current) {\n      return;\n    }\n\n    const minuteDeg = 180 + (360 / 60) * time.getMinutes() + (360 / 3600) * time.getSeconds();\n    const secondDeg = 180 + (360 / 60) * time.getSeconds();\n    const hourDeg = 180 + (360 / 12) * time.getHours() + (360 / 720) * time.getMinutes();\n\n    minuteRef.current.style.transform = `rotateZ(${minuteDeg}deg)`;\n    hourRef.current.style.transform = `rotateZ(${hourDeg}deg)`;\n    secondRef.current.style.transform = `rotateZ(${secondDeg}deg)`;\n    const formattedTime = time.toLocaleTimeString('en-US', { hour12: true });\n    const [hour, minute, second] = formattedTime.split(':').map((part) => parseInt(part));\n\n    timeRef.current.textContent = `${hour}:${minute.toString().padStart(2, '0')}:${second\n      .toString()\n      .padStart(2, '0')}`;\n  }, [minuteRef, hourRef, secondRef, timeRef, time]);\n\n  useEffect(() => {\n    const tick = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(tick);\n  }, []);\n\n  useEffect(() => {\n    updateClockHands();\n  }, [time, updateClockHands]);\n\n  const springConfig = {\n    mass: 1,\n    tension: 550,\n    friction: 120,\n  };\n  const animatedStyle = useSpring({\n    from: { scale: 1 },\n    to: { scale: 3 },\n    config: springConfig,\n  });\n\n  return (\n    <div className=\"wrap\">\n      <div className=\"clock-wrap\">\n        <svg>\n          <circle cx=\"150\" cy=\"150\" r=\"150\" />\n        </svg>\n        <div className=\"clock-root\">\n          <animated.div className=\"point\" style={animatedStyle} />\n        </div>\n        <div className=\"hand-wrap\">\n          <div className=\"hand minute-hand\" ref={minuteRef} />\n        </div>\n        <div className=\"hand-wrap\">\n          <div className=\"hand second-hand\" ref={secondRef} />\n        </div>\n        <div className=\"hand-wrap\">\n          <div className=\"hand hour-hand\" ref={hourRef} />\n        </div>\n        <div className=\"bottom-time\" ref={timeRef} />\n      </div>\n    </div>\n  );\n};\nexport default Clock;\n","import Clock from 'components/Clock';\n\nfunction App() {\n  return <Clock />;\n}\n\nexport default App;\n","import { createRoot } from 'react-dom/client';\nimport { StrictMode } from 'react';\n\nimport './index.css';\nimport 'tailwindcss/tailwind.css';\n\nimport App from './App';\n\nconst container = document.getElementById('root');\nif (container) {\n  const root = createRoot(container);\n  root.render(\n    <StrictMode>\n      <App />\n    </StrictMode>\n  );\n}\n"],"names":["Clock","time","setTime","useState","minuteRef","useRef","hourRef","secondRef","timeRef","updateClockHands","useCallback","minuteDeg","secondDeg","hourDeg","formattedTime","hour","minute","second","part","useEffect","tick","animatedStyle","useSpring","jsxs","jsx","animated","App","container","createRoot","StrictMode"],"mappings":"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"}